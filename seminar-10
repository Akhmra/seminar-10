Да, можно выполнить преобразование в one-hot кодировку без использования функции get_dummies из pandas. 
Вместо этого можно использовать комбинацию функций из pandas для создания необходимых столбцов и применения условий. Вот пример кода, который делает это:


import pandas as pd
import random

# Создаем исходный DataFrame
lst = ['robot'] * 10 + ['human'] * 10
random.shuffle(lst)
data = pd.DataFrame({'whoAmI': lst})

# Преобразуем в one-hot кодировку без использования get_dummies
data['robot'] = (data['whoAmI'] == 'robot').astype(int)
data['human'] = (data['whoAmI'] == 'human').astype(int)

# Показываем результат
print(data.head())
В этом коде мы создаем два новых столбца ('robot' и 'human'), используя булево сравнение, которое возвращает True или False в зависимости от того, соответствует ли значение в столбце 'whoAmI' заданному значению ('robot' или 'human'). 
Затем мы преобразуем результаты булевого сравнения в целочисленный тип (int), где True становится 1, а False — 0, что и является one-hot кодировкой.
